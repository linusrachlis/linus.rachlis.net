body.index {
  nav {
      position: absolute;
  }
  nav .label {
    display: block;
    position: absolute;
    font-family: Consolas, "Courier New", monospace;
    color: white;
    text-decoration: none;
    top: 2%;
    left: 5%;
    opacity: 0;
    transition: all 1s;

    .paren { font-size: 75%; }
  }
  nav .label.active {
    top: 4%;
    opacity: 1;
    transition: all .5s;
  }
  
  nav .hint {
    display: block;
    position: absolute;
    font-family: Consolas, "Courier New", monospace;
    color: white;
    top: 4%;
    left: 5%;
    /* Disabled state (nav not idle) */
    @include animation(none);
    opacity: 0;
    transition: opacity .5s;
  }
  nav.idle .hint {
    /* When nav is idle, flash hint if the user doesn't hover for a while */
    @include animation(blink-full 2s infinite 7s);
  }

  @media (min-aspect-ratio: 2033/1475) {
  /* This business accomplishes the same thing as background-size: contain.
     But there is a reason to go through it. If I went the background route,
     I wouldn't be able to read back out the image's changing dimensions.
     Using an img lets me use the browser's natural habit of maintaining an
     img element's aspect ratio to also update the nav container's dimensions.
     (See main.js.) */
     
      /* Viewport is wider than image aspect ratio, so constrain height */
      img.bg {
          height: 100%;
          max-height: 1475px;
      }

  }
  @media (max-aspect-ratio: 2033/1475) {
      /* Viewport is taller than image aspect ratio, so constrain width */
      img.bg {
          width: 100%;
          max-width: 2033px;
      }
  }

  nav img.shift {
      position: absolute;
      left: 82.14461%;
      top: 40.40678%;
      width: 17.855386%;
      height: 16.474576%;
      opacity: 0;
      transition: opacity 1s;
  }
  nav img.shift.on {
      opacity: 1;
      transition: opacity 500ms;
  }

  nav ul {
      position: absolute;
      width: 100%;
      height: 100%;
      margin: 0;
      padding: 0;
  }
  nav ul li {
      position: absolute;
      margin: 0;
      padding: 0;
      opacity: 0;
      transition: opacity 1s;
      overflow: visible;
  }
  nav ul li .key {
      display: block;
      width: 100%;
      height: 100%;
      overflow: hidden;
      text-indent: -9999em;
      background: top left no-repeat;
      background-size: contain;
  }

  nav.idle ul li {
      @include animation(pulse-faint infinite alternate);
  }
  nav.idle ul li.contact {
      @include animation-delay(1s);
      @include animation-duration(.6s);
  }
  nav.idle ul li.resume {
      @include animation-delay(1.5s);
      @include animation-duration(.8s);
  }
  nav.idle ul li.poetry {
      @include animation-delay(2s);
      @include animation-duration(1s);
  }
  nav.idle ul li.experiments {
      @include animation-delay(2.5s);
      @include animation-duration(1.2s);
  }

  nav ul {
    li:hover, li.hover {
      @include animation(none);
      opacity: 1;
      transition: opacity .5s;
    }
  }

  nav ul li.resume {
      left: 24.495%;
      top: 54.101%;
      width: 16.182%;
      height: 18.033%;
  }
  nav ul li.resume .key {
      background-image: url(../img/light-r.jpg);
  }
  nav ul li.poetry {
      left: 63.0103%;
      top: 38.2373%;
      width: 14.36301%;
      height: 14.101695%;
  }
  nav ul li.poetry .key {
      background-image: url(../img/light-p.jpg);
  }
  nav ul li.contact {
      left: 2.9513%;
      top: 55.7966%;
      width: 15.00246%;
      height: 17.7627%;
  }
  nav ul li.contact .key {
      background-image: url(../img/light-2.jpg);
  }
  nav ul li.experiments {
      left: 47.31923%;
      top: 39.457627%;
      width: 13.1825%;
      height: 13.6949%;
  }
  nav ul li.experiments .key {
      background-image: url(../img/light-8.jpg);
  }
}

html.touch body.index {
  nav.idle .hint {
    @include animation(none);
  }
  nav.idle ul li {
      @include animation(blink-full infinite);
      opacity: 1;
  }
  /* Now the durations have to be doubled since the different keyframe set was used ... */
  nav.idle ul li.contact {
      @include animation-duration(1.2s);
  }
  nav.idle ul li.resume {
      @include animation-duration(1.6s);
  }
  nav.idle ul li.poetry {
      @include animation-duration(2s);
  }
  nav.idle ul li.experiments {
      @include animation-duration(2.4s);
  }

  /* For touch devices, put labels next to keys and pulse with key */
  nav {
    .label {
      opacity: 1;
      transition: none;
    }
    .label.active {
      transition: none;
    }

    .label.contact {
      left: 15%;
      top: 58%;
      transform: matrix3d(0.923917483660131, -0.262765522875817, 0, 0.000539799253034547, 0.378551136363636, 0.823905414438503, 0, -0.000459558823529411, 0, 0, 1, 0, 0, 0, 0, 1);
      transform-origin: 0px 0px 0px;
    }
    .label.resume {
      left: 38%;
      top: 56%;
      transform: matrix3d(0.887782050688041, -0.276004262614094, 0, 0.000463327618959366, 0.605803822158806, 0.701816967470666, 0, -0.000652711789796445, 0, 0, 1, 0, -15, 7, 0, 1);
      transform-origin: 0px 0px 0px;
    }
    .label.poetry {
      left: 74%;
      top: 39%;
      transform: matrix3d(0.78084, -0.20221, 0, 0.00033, 0.64601, 0.49469, 0, -0.00093, 0, 0, 1, 0, -15, 7, 0, 1);
      transform-origin: 0px 0px 0px;
    }
    .label.experiments {
      left: 58%;
      top: 41%;
      transform: matrix3d(0.780843119919619, -0.202205839697225, 0, 0.000331827347678484, 0.646006933567237, 0.494690182319404, 0, -0.000934569680262306, 0, 0, 1, 0, -15, 7, 0, 1);
      transform-origin: 0px 0px 0px;
    }
  }
}
